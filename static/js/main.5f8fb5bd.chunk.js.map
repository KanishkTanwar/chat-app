{"version":3,"sources":["history.js","components/chat-box/chat-box.component.jsx","components/auth/auth.component.jsx","room.js","components/rooms/rooms.component.jsx","App.js","index.js"],"names":["history","createHashHistory","ChatBox","state","serverMessage","inputText","clientCount","spinner","userTyping","isTyping","socket","myRef","React","createRef","onChatSubmit","e","preventDefault","emit","props","userName","setState","onTyping","target","value","this","io","path","transports","on","message","current","scrollIntoView","behavior","name","temp","filter","push","id","className","map","messageListItem","ref","uuid","user","i","onSubmit","type","onChange","Component","Auth","onNameSubmit","placeholder","roomArray","title","owner","description","Rooms","room","App","exact","reactDom","render","document","querySelector"],"mappings":"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","file":"static/js/main.5f8fb5bd.chunk.js","sourcesContent":["import { createHashHistory } from \"history\";\n\nconst history = createHashHistory();\n\nexport default history;","import React from 'react';\nimport { io } from \"socket.io-client\";\nimport history from '../../history';\nimport './chat-box.styles.css'\n\nclass ChatBox extends React.Component {\n    state = {serverMessage: [], inputText:\"\", clientCount:0, spinner: true, userTyping:[], isTyping:false}\n    socket = null;\n    myRef = React.createRef();\n    componentDidMount(){\n        if(!this.props.userName){history.push(\"/\");return;}\n        // to connect with a socket\n        this.socket = io(\"https://chat-app-co.herokuapp.com/\", {path:\"/global\",transports:[\"polling\", \"websocket\"]});\n        // this.socket = io(\"http://localhost:8001\", {path:\"/global\",transports:[\"polling\", \"websocket\"]});\n\n        this.socket.on(\"connect\", () => {\n            this.setState({spinner:false});\n        });\n\n        //listening to custom event Message which display all the message\n        this.socket.on(\"serverMessage\", (message) => {\n            this.setState({serverMessage: [...this.state.serverMessage, ...message]});\n            this.myRef.current.scrollIntoView({behavior: \"smooth\"})\n        });\n\n        //listening for clientCount event\n        this.socket.on(\"userCount\", (clientCount) => {\n            this.setState({clientCount: clientCount});\n        })\n\n        // listening user typing event\n        this.socket.on(\"userStartToType\", (userName) => {\n            this.setState({userTyping: [...this.state.userTyping, ...userName]});\n        })\n\n        this.socket.on(\"removeUserTyping\", (name) => {\n            const temp = this.state.userTyping.filter((userName)=> (userName!==name)?userName: false);\n            this.setState({userTyping:temp});\n        });\n\n\n    }\n    onChatSubmit = (e) => {\n        e.preventDefault();\n        this.socket.emit(\"userMessage\",this.state.inputText, this.props.userName);\n        this.socket.emit(\"removeUserTyping\", this.props.userName);\n        this.setState({inputText: \"\", isTyping:false})\n    }\n    onTyping = (e)=> {\n        this.setState({inputText: e.target.value},()=>{\n            if(this.state.inputText === \"\"){\n                this.socket.emit(\"removeUserTyping\", this.props.userName);\n                this.setState({isTyping:false})\n            }\n        });\n        // As long as user start typing emit but once\n        if(!this.state.isTyping){\n            this.socket.emit(\"userStartToType\",this.props.userName);\n            this.setState({isTyping: true});\n        }\n    }\n    componentWillUnmount() {\n        //emit an event user just unmounted\n        if(this.socket)this.socket.emit(\"userRemove\",this.socket.id);\n    }\n    \n    render(){\n        if(this.state.spinner){\n            return <div className=\"spinner\"></div>\n        }\n        return(\n            <section className=\"chat\">\n                <h1 className=\"chat__heading\">Welcome {this.props.userName}</h1>\n                <h4 className=\"chat__secondary\">Total users connected {this.state.clientCount}</h4>\n                <div className=\"chat__pane\">\n                    {this.state.serverMessage.map(\n                        messageListItem => {\n                            return(\n                                <ul key={messageListItem.uuid}>\n                                <li className=\"chat__description\" >\n                                    <span className={messageListItem.userName===this.props.userName? \"usernameBlue\": \"usernameRed\"}>{messageListItem.userName}</span>: <span>{messageListItem.message}</span>\n                                </li>\n                                <div className=\"chat__border\" ref={this.myRef}/>\n                                </ul>\n                            )\n                        }\n                    )}\n                    {/* {this.state.userTyping!==\"\" ? <div className=\"chat__description\">{this.state.userTyping}...</div>: null} */}\n                    {this.state.userTyping.map((user,i)=>{\n                        return <p key={i}className=\"chat__typing\">{user}\n                            <span className=\"chat__dot1\">.</span>\n                            <span className=\"chat__dot2\">.</span>\n                            <span className=\"chat__dot3\">.</span>\n                        </p>\n                    })}\n                </div>\n                <form className=\"chat__form\"onSubmit={(e)=>this.onChatSubmit(e)}>\n                    <input className=\"chat__input\" type=\"text\" value={this.state.inputText} onChange={ (e)=>this.onTyping(e) }/>\n                    <button className=\"chat__button\" type=\"submit\">Send</button>\n                </form>\n            </section>\n        )\n    }\n}\n\nexport default ChatBox;","import React from 'react';\nimport './auth.styles.css';\n\nclass Auth extends React.Component {\n    state = {userName:\"\"}\n    render(){\n        return (\n            <section className=\"auth\">\n                <form className=\"auth__form\"onSubmit={(e)=>this.props.onNameSubmit(e,this.state.userName)}>\n                    <input className=\"auth__input\" onChange={(e)=> this.setState({userName: e.target.value})}type=\"text\" placeholder=\"what is your name\"/>\n                    <button className=\"auth__button\" type=\"submit\">Enter</button>\n                </form>\n            </section>\n        )\n    }\n}\nexport default Auth;","export const roomArray = \n[\n    {\n        id: 1,\n        title: \"Engineering\",\n        owner: \"kanishk\",\n        description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque sed dictum elit, quis fringilla leo. Suspendisse potenti. Nulla porta arcu leo, ut hendrerit odio tristique aliquet. Aliquam scelerisque odio urna, sit amet fringilla dui blandit vel. Mauris auctor posuere gravida. Nam imperdiet vulputate feugiat. Mauris faucibus ligula vel leo varius rutrum id ut odio. Curabitur enim neque, dignissim nec suscipit vitae, luctus in neque. Praesent nec odio posuere, tempor neque sed, vulputate orci. Nunc sapien libero, ullamcorper eu fermentum eget, vehicula eu felis. Aenean ut neque urna.\",\n    },\n    {\n        id: 2,\n        title: \"Love\",\n        owner: \"kanishk\",\n        description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque sed dictum elit, quis fringilla leo. Suspendisse potenti. Nulla porta arcu leo, ut hendrerit odio tristique aliquet. Aliquam scelerisque odio urna, sit amet fringilla dui blandit vel. Mauris auctor posuere gravida. Nam imperdiet vulputate feugiat. Mauris faucibus ligula vel leo varius rutrum id ut odio. Curabitur enim neque, dignissim nec suscipit vitae, luctus in neque. Praesent nec odio posuere, tempor neque sed, vulputate orci. Nunc sapien libero, ullamcorper eu fermentum eget, vehicula eu felis. Aenean ut neque urna.\",\n    },\n    \n]\n\n// export const roomArray = []","import React from 'react';\nimport { roomArray } from '../../room.js'\n\nconst Rooms = () => {\n    return (\n    <section className=\"rooms\">\n        <h1>All available rooms</h1>\n        {roomArray.map((room)=>{\n            return (<div key={room.id} className=\"card\">\n                <div className=\"card__title\">{ room.title }</div>\n                <div className=\"card__description\">{ room.description }</div>\n            </div>)\n        })}\n    </section>\n    )\n}\n\nexport default Rooms;","import React from \"react\";\nimport { Router, Route } from 'react-router-dom';\nimport history from \"./history\";\n\nimport ChatBox from \"./components/chat-box/chat-box.component\";\nimport Auth from './components/auth/auth.component';\nimport Rooms from './components/rooms/rooms.component';\nimport './App.css';\n\nclass App extends React.Component{\n    state = {userName:\"\"}\n    onNameSubmit = (e, userName) => {\n        e.preventDefault();\n        this.setState({userName: userName});\n        history.push(\"/chat\");\n    }\n\n    render(){\n        return (\n        <div>\n            <Router history={history}>\n                <Route path=\"/\" exact>\n                    <Auth onNameSubmit={this.onNameSubmit}/>\n                </Route>\n                <Route path=\"/rooms\" exact>\n                    <Rooms/>\n                </Route>\n                <Route path=\"/chat\">\n                    <ChatBox userName={this.state.userName}/>\n                </Route>\n            </Router>\n        </div>\n        )\n    }\n}\n\nexport default App;","import React from \"react\";\nimport reactDom from \"react-dom\";\nimport App from \"./App\";\n\nreactDom.render(\n    <App/>,\n    document.querySelector(\"#root\")\n)"],"sourceRoot":""}